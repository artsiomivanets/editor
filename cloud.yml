---

- name: test
  hosts: localhost
  vars:
    home: "{{ ansible_env.HOME }}"

  tasks:

    - name: Install UI programs
      become: yes
      community.general.pacman:
        name:
          - telegram-desktop

    - name: Install default packages for work
      become: yes
      community.general.pacman:
        name:
          - sqlite3
          - postgresql
          - git
          - base-devel
          - make
          - nodejs
          - ripgrep
          - python2
          - python-pip
          - python3
          - bash-completion
          - neovim
          - nodejs
          - yarn
          - tmux
          - ncdu
          - compton
          - fzf
          - ranger

    - name: Install asdf
      ansible.builtin.git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: "{{ home }}/.asdf"

    - name: Copy bash config files
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - { src: "files/vimrc", dest: "{{home}}/dotfiles/" }
        - { src: "files/coc-settings.json", dest: "{{home}}/dotfiles/" }
        - { src: "files/tmux.conf", dest: "{{home}}/dotfiles/" }
        - { src: "files/bashrc", dest: "{{home}}/.bashrc" }
        - { src: "files/bash_profile", dest: "{{home}}/.bash_profile" }
        - { src: "files/inputrc", dest: "{{home}}/.inputrc" }

    - name: Ensure .config/nvim exists
      file:
        path: "{{ home }}/.config/nvim"
        state: directory

    - name: Create symlinks to dotfiles
      ansible.builtin.file:
        src: '{{ home }}/dotfiles/{{ item.src }}'
        dest: '{{ item.dest }}'
        state: link
      loop:
        - { src: "vimrc", dest: "{{home}}/.config/nvim/init.vim" }
        - { src: "coc-settings.json", dest: "{{home}}/.config/nvim/coc-settings.json" }
        - { src: "tmux.conf", dest: "{{home}}/.tmux.conf" }


    - name: Install vim plugins
      ansible.builtin.shell:
        nvim +PlugInstall +qall --headless

